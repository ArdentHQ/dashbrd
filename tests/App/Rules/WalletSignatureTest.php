<?php

declare(strict_types=1);

use App\Rules\WalletSignature;

it('should pass with valid address', function (string $address) {
    expect(new WalletSignature())->passes(null, $address)->toBeTrue();
})->with([
    '0x1231231231231231231231231231231231231231123123123123123123123123123123123123123112312312312312312312312312312312312312311231311231',
    '0x1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678907890907890',
    '0x0000000000000000000000000000000000001010000000000000000000000000000000000000101000000000000000000000000000000000000010101010101010',
    '0x23117305080f62b803ce0271cae547cbf84e562723117305080f62b803ce0271cae547cbf84e562723117305080f62b803ce0271cae547cbf84e56275627275627',
    '0x632803fa97eB363B103Fa074636E584783052E8e632803fa97eB363B103Fa074636E584783052E8e632803fa97eB363B103Fa074636E584783052E8e2E8e8e2E8e',
]);

it('should fail with invalid address', function (string $address) {
    expect(new WalletSignature())->passes(null, $address)->toBeFalse();
})->with([
    '0x1231',
    '0xZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ',
    '0000000000000000000000000000000000001010',
    '0231170305080f62b803ce0271cae547cbf84e5627',
    '1x632803fa97eB363B103Fa074636E584783052E8e',
]);

it('should have a message', function () {
    expect(new WalletSignature())->message()->toBe(trans('auth.validation.invalid_signature'));
});
